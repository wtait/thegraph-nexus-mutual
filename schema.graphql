type User @entity {
  id: ID! # address
  isMember: Boolean!
  coverCount: Int!
  stakeCount: Int!
  #balance: Int!
  covers: [Cover!]! @derivedFrom(field: "user")
  stakes: [Stake!]! @derivedFrom(field: "user")
  claims: [Claim!]! @derivedFrom(field: "user")
  votes: [Vote!]! @derivedFrom(field: "user")
}

type InsuredContract @entity {
  id: ID!
  ens: String
  covers: [Cover!]! @derivedFrom(field: "contract")
  stakes: [Stake!]! @derivedFrom(field: "contract")
}

type Cover @entity {
  id: ID!
  user: User!
  contract: InsuredContract!
  amount: BigInt!
  daysToCover: BigInt!
  created: BigInt!
  expires: BigInt!
  premium: BigInt!
  premiumNXM: BigInt!
  claims: [Claim!]! @derivedFrom(field: "cover")
}

type Stake @entity {
  id: ID!
  user: User!
  contract: InsuredContract!
  amount: BigDecimal!
  unlockedAmount: BigDecimal!
  burntAmount: BigDecimal!
  daysToStake: Int!
  created: BigInt!
  expires: BigInt!
}

type NexusContractList @entity {
  id: ID!
  contractRegister: Bytes! # address
  memberRoles: Bytes! # address
  tokenData: Bytes! # address
  claimsData: Bytes! # address
  quotationData: Bytes! # address
  tokenController: Bytes! # address
  nxmToken: Bytes! # address
}

type Claim @entity {
  id: ID!
  user: User!
  cover: Cover!
  submitDate: BigInt!
  votes: [Vote!]! @derivedFrom(field: "claim")
}

type Vote @entity {
  id: ID!
  user: User!
  claim: Claim!
  verdict: Int!
  submitDate: BigInt!
}

type NXMToken @entity {
  id: ID!

  " Token address "
  address: Bytes!

  " Number of decimals the token uses "
  decimals: Int!

  " Human-readable name of the token "
  name: String!

  " Symbol of the token "
  symbol: String!

  " Token description "
  description: String

  " Image URL "
  imageUrl: String

  " Token flags"
  flags: [String!]!

  # TODO: Number of token holders
  # holderCount: BigInt!

  " Total number of events (all types)"
  eventCount: BigInt!

  " Total number of burn events "
  burnEventCount: BigInt!

  " Total number of mint events "
  mintEventCount: BigInt!

  " Total number of transfer events "
  transferEventCount: BigInt!

  " Total token supply "
  totalSupply: BigDecimal!

  " Total token burned "
  totalBurned: BigDecimal!

  " Total token minted "
  totalMinted: BigDecimal!

  " Total token transferred "
  totalTransferred: BigDecimal!

  # " List of token events "
  # events: [TokenEvent!]! @derivedFrom(field: "token")
}
